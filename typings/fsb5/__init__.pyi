"""
This type stub file was generated by pyright.
"""

from collections import namedtuple
from enum import IntEnum
from io import BytesIO
from typing import List, NamedTuple
from .utils import BinaryReader

__version__ = ...
__author__ = ...
__email__ = ...
class SoundFormat(IntEnum):
	NONE = ...
	PCM8 = ...
	PCM16 = ...
	PCM24 = ...
	PCM32 = ...
	PCMFLOAT = ...
	GCADPCM = ...
	IMAADPCM = ...
	VAG = ...
	HEVAG = ...
	XMA = ...
	MPEG = ...
	CELT = ...
	AT9 = ...
	XWMA = ...
	VORBIS = ...
	@property
	def file_extension(self): # -> Literal['mp3', 'ogg', 'wav', 'bin']:
		...
	
	@property
	def is_pcm(self): # -> bool:
		...
	


FSB5Header = NamedTuple('FSB5Header', ['id', 'version', 'numSamples', 'sampleHeadersSize', 'nameTableSize', 'dataSize', 'mode', 'zero', 'hash', 'dummy', 'unknown', 'size'])
Sample = NamedTuple('Sample', [('name', str), 'frequency', 'channels', 'dataOffset', 'samples', 'metadata', 'data'])
frequency_values = ...
class MetadataChunkType(IntEnum):
	CHANNELS = ...
	FREQUENCY = ...
	LOOP = ...
	XMASEEK = ...
	DSPCOEFF = ...
	XWMADATA = ...
	VORBISDATA = ...


chunk_data_format = ...
VorbisData = namedtuple('VorbisData', ['crc32', 'unknown'])
def bits(val, start, len):
	...

class FSB5:
	samples: List[Sample]
	def __init__(self, data) -> None:
		...
	
	def rebuild_sample(self, sample: Sample) -> memoryview | bytes:
		...
	
	def get_sample_extension(self) -> str:
		...
	


def load(data): # -> FSB5:
	...

