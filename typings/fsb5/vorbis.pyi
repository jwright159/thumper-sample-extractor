"""
This type stub file was generated by pyright.
"""

import ctypes
from enum import IntEnum
from . import *

vorbis = ...
vorbisenc = ...
ogg = ...
class VorbisEncodeRequest(IntEnum):
	OV_ECTL_RATEMANAGE2_GET = ...
	OV_ECTL_RATEMANAGE2_SET = ...
	OV_ECTL_LOWPASS_GET = ...
	OV_ECTL_LOWPASS_SET = ...
	OV_ECTL_IBLOCK_GET = ...
	OV_ECTL_IBLOCK_SET = ...
	OV_ECTL_COUPLING_GET = ...
	OV_ECTL_COUPLING_SET = ...
	OV_ECTL_RATEMANAGE_GET = ...
	OV_ECTL_RATEMANAGE_SET = ...
	OV_ECTL_RATEMANAGE_AVG = ...
	OV_ECTL_RATEMANAGE_HARD = ...


class VorbisInfo(ctypes.Structure):
	"""
	https://xiph.org/vorbis/doc/libvorbis/vorbis_info.html
	"""
	_fields_ = ...
	def __init__(self) -> None:
		...
	
	def __del__(self): # -> None:
		...
	


class VorbisComment(ctypes.Structure):
	"""
	https://xiph.org/vorbis/doc/libvorbis/vorbis_info.html
	"""
	_fields_ = ...
	def __init__(self) -> None:
		...
	
	def __del__(self): # -> None:
		...
	


class VorbisDSPState(ctypes.Structure):
	"""
	https://svn.xiph.org/trunk/vorbis/include/vorbis/codec.h
	"""
	_fields_ = ...


class OggStreamState(ctypes.Structure):
	"""
	https://xiph.org/ogg/doc/libogg/ogg_stream_state.html
	"""
	_fields_ = ...
	def __init__(self, serialno) -> None:
		...
	
	def __del__(self): # -> None:
		...
	


class OggPacket(ctypes.Structure):
	"""
	https://xiph.org/ogg/doc/libogg/ogg_packet.html
	"""
	_fields_ = ...


class OggpackBuffer(ctypes.Structure):
	"""
	https://xiph.org/ogg/doc/libogg/oggpack_buffer.html
	"""
	_fields_ = ...
	def __init__(self) -> None:
		...
	
	def __del__(self): # -> None:
		...
	


class OggPage(ctypes.Structure):
	"""
	https://xiph.org/ogg/doc/libogg/oggpack_buffer.html
	"""
	_fields_ = ...


def errcheck(result, func, arguments):
	...

def vorbis_packet_blocksize_errcheck(result, func, arguments):
	...

if hasattr(ogg, 'oggpack_writecheck'):
	...
def rebuild(sample): # -> memoryview:
	...

def write_packets(state, buf, func=...): # -> None:
	...

def rebuild_id_header(channels, frequency, blocksize_short, blocksize_long): # -> OggPacket:
	...

def rebuild_comment_header(): # -> OggPacket:
	...

def rebuild_setup_header(setup_packet_buff): # -> OggPacket:
	...

def lerp(x, x_0, x_1, y_0, y_1):
	...

def get_header_info(quality, channels, rate): # -> tuple[Any, Any, bytes]:
	...

